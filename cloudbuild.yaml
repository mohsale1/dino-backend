# Cloud Build configuration for Dino Backend

# Substitution variables (set these in Cloud Build trigger or via CLI):

# _SECRET_KEY: JWT secret key (minimum 32 characters)

# _FRONTEND_URL: Frontend URL for CORS (optional, defaults to pattern)



steps:

 # Generate SECRET_KEY if not provided

 - name: 'gcr.io/cloud-builders/gcloud'

  entrypoint: 'bash'

  args:

   - '-c'

   - |

    if [ -z "${_SECRET_KEY}" ]; then

     echo "Generating secure SECRET_KEY..."

     SECRET_KEY=$(openssl rand -base64 48 | tr -d "=+/" | cut -c1-32)

     echo "SECRET_KEY generated (length: $${#SECRET_KEY})"

     echo "$$SECRET_KEY" > /workspace/secret_key.txt

    else

     echo "Using provided SECRET_KEY"

     echo "${_SECRET_KEY}" > /workspace/secret_key.txt

    fi



 # Build the container image

 - name: 'gcr.io/cloud-builders/docker'

  args: [

   'build',

   '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/dino-repo/dino-backend:$BUILD_ID',

   '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/dino-repo/dino-backend:latest',

   '.'

  ]



 # Push the container image to Artifact Registry

 - name: 'gcr.io/cloud-builders/docker'

  args: [

   'push', 

   'us-central1-docker.pkg.dev/$PROJECT_ID/dino-repo/dino-backend:$BUILD_ID'

  ]



 # Deploy to Cloud Run

 - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'

  entrypoint: 'bash'

  args:

   - '-c'

   - |

    # Read the SECRET_KEY

    SECRET_KEY=$(cat /workspace/secret_key.txt)

     

    # Set CORS origins (use provided or default pattern)

    FRONTEND_URL="${_FRONTEND_URL:-https://dino-frontend-$PROJECT_ID.us-central1.run.app}"

     

    echo "Deploying to Cloud Run with:"

    echo "- SECRET_KEY length: $${#SECRET_KEY}"

    echo "- Frontend URL: $$FRONTEND_URL"

    echo "- Database: jm-dino"

     

    gcloud run deploy dino-backend \

     --image us-central1-docker.pkg.dev/$PROJECT_ID/dino-repo/dino-backend:$BUILD_ID \

     --region us-central1 \

     --platform managed \

     --allow-unauthenticated \

     --memory 1Gi \

     --cpu 1 \

     --min-instances 0 \

     --max-instances 10 \

     --concurrency 80 \

     --timeout 300 \

     --port 8080 \

     --set-env-vars "ENVIRONMENT=production,GCP_PROJECT_ID=$PROJECT_ID,DATABASE_NAME=jm-dino,GCS_BUCKET_NAME=$PROJECT_ID-dino-storage,QR_CODE_BASE_URL=https://dino-backend-$PROJECT_ID.a.run. app,CORS_ORIGINS=$$FRONTEND_URL,SECRET_KEY=$$SECRET_KEY,DEBUG=false,LOG_LEVEL=INFO" \

     --service-account dino-backend-sa@$PROJECT_ID.iam.gserviceaccount.com



# Build options

options:

 logging: CLOUD_LOGGING_ONLY

 machineType: 'E2_HIGHCPU_8'



# Images to be pushed to registry

images:

 - 'us-central1-docker.pkg.dev/$PROJECT_ID/dino-repo/dino-backend:$BUILD_ID'